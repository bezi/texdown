// GET: /about
module.exports = function (req, res) {
    var data = {};
    data.user = req.user;
    data.file = {}
    data.file.name = "Usage";
    data.file.content = "#Using ![TeXDown](\/images\/texdown-logo-darkgray-300.png)\r\n---\r\nThere are a few important things to know to be able to use TeXDown; these things are designed to make your life easier, but not knowing them can sometimes make it seem like TeXDown is misbehaving.\r\n\r\n## Formatting Notes\r\nThe only way to get formatted notes to appear in TeXDown is to type in the editor interface on the left, and then compile the notes so they are previewed on the right.\r\n\r\nYou have a multitude of options to determine how and when to compile your notes. The slowest of these is to click the compile button in the top navigation bar every time. It\'s slow but it works. \r\n\r\n> TeXDown seamlessly blends old and new technologies to increase efficiency.\r\n\r\nHere\'s where the fun begins. People familiar with `vim` or `emacs` can select their preferences from the \"<span class=\"glyphicon glyphicon-cog\"><\/span>  Settings...\" menu above. Having chosen one of these, you may use the default save command for that editor interface to perform the function displayed in the table below corresponding to that configuration:\r\n\r\n<table align=\"center\">\r\n\t<thead>\r\n \t<td>Autosave?<\/td>\r\n \t<td>Autocompile?<\/td>\r\n \t<td><code>:w<\/code>\/<code>C-x C-s<\/code>...<\/td>\r\n <\/thead>\r\n\t<tr>\r\n \t<td>no<\/td>\r\n \t<td>no<\/td>\r\n \t<td>compiles and saves<\/td>\r\n <\/tr>\r\n\t<tr>\r\n \t<td>no<\/td>\r\n \t<td>yes<\/td>\r\n \t<td>saves<\/td>\r\n <\/tr>\r\n\t<tr>\r\n \t<td>yes<\/td>\r\n \t<td>no<\/td>\r\n \t<td>compiles<\/td>\r\n <\/tr>\r\n\t<tr>\r\n \t<td>no<\/td>\r\n \t<td>no<\/td>\r\n \t<td>does nothing<\/td>\r\n <\/tr>\r\n<\/table>\r\n\r\n## Saving Notes\r\nThis brings us right into how your notes are saved. You have the option of either saving your notes automatically after it is detected that you have stopped typing, or you can opt to manually save your notes whenever you want. Again, see the table above for what operation is mapped to your editor\'s default save command.\r\n\r\n## \\(\\mathrm{\\LaTeX}\\) Notetaking\r\nAnother key feature that makes TeXDown unique is it\'s ability to let you switch between Markdown and LaTeX so efficiently. \r\n\r\n> TeXDown is designed to be quick and efficient by reducing total note-taking effort.\r\n\r\nThis means that you shouldn\'t have to fiddle with complicated preambles and drawn out declarations. The emphasis should be on the notes, and text of notes is more quickly written and more naturally displayed on the web when written in Markdown. LaTeX excels at the math parts.\r\n\r\n<div class=\"alert alert-warning\">__Warning!__ Pay attention to make sure that your equations are formatted correctly.<\/div>\r\n\r\nTo have your equations displayed in fanciful, mathematical style, simply enclose your equations in `\\ (` and `\\ )` for inline equations and `\\ [` with `\\ ]` or `$$` with `$$` for display-style equations. (There\'s a slight bug right now where the first two types of math delimiters listed above are not processed correctly, so they\'ve been displayed with a space between here. When you want to use them, remove the in-between space, as you can see in the sample code for the following example:\r\n\r\n\\[\r\n    \\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)\r\n\\]\r\n\r\n> Wait, but I\'ve always used `$` and `$$` to enclose my math. Why is this not an option?\r\n\r\nHTML and Markdown are not LaTeX. When writing notes, dollar signs can often come up when speaking of money, so we have chosen, as the makers of [MathJax](http:\/\/www.mathjax.org\/) have, to not enable this functionality by default. In the future we may add support for this, but we\'d like to encourage the other way.\r\n\r\nIn fact, `$` and `$$` as a delimiters in LaTeX is bad practice. The other delimiters listed above are considered \"favorable\" to these methods (as you can read [here](http:\/\/tex.stackexchange.com\/questions\/510\/are-and-preferable-to-dollar-signs-for-math-mode)), and support for these could potentially be removed from future releases of LaTeX.\r\n\r\n#### tl;dr\r\nUse `\\ (` and `\\ )` (without the spaces) to display in-line equations, and `\\ [` and `\\ ]` (again without the spaces) to display display-style equations.\r\n\r\n## Code Blocks\r\nCode blocks are much more simple. Delimit your code with three backticks \\`\\`\\`, three tildes ~~~, or indent all of your code four spaces. Personally, I prefer the tildes.\r\n\r\nIf you want to specify a language to the prettifier, first check [here](http:\/\/google-code-prettify.googlecode.com\/svn\/trunk\/README.html) to see if your language is supported by our syntax colorer. \r\n\r\n<div class=\"alert alert-info\">__Note:__ You do not have to specify a language for the colorer to syntax highlight your code. It has ways of guessing.<\/div>\r\n\r\nIf it is available, or one similar is available, use either the backticks or tildes to fence your code block, and then type the name of the language immediately after these three characters. Start your code on a new line, and you\'re all set.\r\n\r\n## Other\r\nThe rest of the features are pretty self explanatory, but deserve mention.\r\n\r\n### Tags\r\nTags are pretty slick at helping you organize your notes. Apply tags with the plus from the \"All Notes\" page, and delete them by clicking on the minus attached to each tag. Use the sidebar to filter by tags.\r\n\r\n### <span class=\"glyphicon glyphicon-fullscreen\"><\/span>  Expand\r\nUse this button to make the preview pane wider, in case you have something really wide that you need to view.\r\n\r\n### Settings\r\nOne more thing about settings: they should be saved per user, and loaded upon viewing or creating a new note. This means that if you find a configuration you like, you\'ll only have to set it once and then it\'ll Just Work.\r\n\r\n### <span class=\"glyphicon glyphicon-trash\"><\/span>  Discard\r\nIf you have unsaved changes, pressing this button will get rid of them and show you the document as it was the last time you saved. \r\n\r\n<div class=\"alert alert-info\">__Keep in mind:__ if you have the autosave feature on, this button will be essentially useless.<\/div>\r\n";

    res.render('about', data);
    return;
};
